	
	
	剩余工作量
	
	1、dom event 事件存储机制
	//2、render + init + destroy 机制
	3、model数据 对象
	 3.1、数据事件绑定
	4、表单数据
	
	
	
	
	页面间传递json，.pub('!!!',)
	
	1、 基础设置轻量化
	2、 功能插件化，可配置式定制框架功能
	
	3、 基本框架功能
		
		1、 oo
		2、 dom ， utils
		3、 ui ， class ， widget ， model ， controller ， view	//脚本内容结构类型
		4、 fr plugin
		5、 mvc - package
		6、 dom操作与widget绑定，新增-自动初始化、删除-自动反初始化
	
	
	MVC 
	
	1、Model     -    定义数据类，返回丰富数据操作方法的数据对象
	1.1、一个数据类，可定义多个对应不同接口的方法，
	1.2、异步返回数据对象
	1.3、定义	Model : {
			getList:{
				url : '',
				data:{ page:0 },
				type:'post',
				datatype:'json',
				async:true, //可自行判断是否有callback函数
				default:{ //默认数据
					
				},
				before:function(xhr){ //简化传参，服务端接口与前端业务逻辑解耦
					xhr.url=xhr.url+'/'+xhr.data.id;
					xhr.data.index=xhr.data.page;
					delete xhr.data.page;
				},
				complete : function(data){ //数据预处理，与服务端接口解耦
					data.AID=data.id;
					delete data.AID;
					return data;
				},
			},
			delete:{url:''}
		}
	
	1.4、异步方式：
		people_model.getList({page:1},function(data){},function(e,data){});						people_model.getList({page:1},function(data){});
	1.5、同步方式
		try{
			var list=people_model.getList({page:1});
			var item=list.find({id:'12231'});
		}catch(e){}
	1.6、可批量调试服务端接口
	
	
	
